apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fastapi-ingress
  annotations:
    spec.ingressClassName: "nginx"
    nginx.ingress.kubernetes.io/cors-allow-origin: "http://localhost:3000, http://frontend.localhost:8080, http://localhost:8080"
    nginx.ingress.kubernetes.io/cors-allow-methods: "*"
    nginx.ingress.kubernetes.io/cors-allow-headers: "*"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/preserve-host: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_cookie_path / "/";
      proxy_cookie_domain api.localhost localhost;
      more_set_headers "Access-Control-Allow-Origin: $http_origin";
      more_set_headers "Access-Control-Allow-Credentials: true";
spec:
  rules:
    - host: api.localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: fastapi
                port:
                  number: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  labels:
    name: frontend-ingress
  annotations:
    nginx.ingress.kubernetes.io/preserve-host: "true"
spec:
  rules:
  - host: frontend.localhost
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: frontend
            port: 
              number: 3000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-console-ingress
  annotations:
    spec.ingressClassName: "nginx"
spec:
  rules:
    - host: minio.localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: minio
                port:
                  number: 9001
